name: CI
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - name: Cache NASM
        if: matrix.os == 'windows-latest'
        uses: actions/cache@v4
        with:
          path: C:\nasm
          key: nasm-2.16.3
      - name: Install NASM (if not cached)
        if: matrix.os == 'windows-latest'
        run: |
          if (!(Test-Path "C:\nasm\nasm.exe")) {
            choco install nasm --yes --params "/InstallDir:C:\nasm"
          }
          echo "C:\nasm" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Configure
        run: > 
          cmake -S . -B build 
          -G Ninja 
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} 
          -DBUILD_TESTING=ON 
          -DBENCHMARK_ENABLE_TESTING=OFF 
          -DBORINGSSL_SKIP_TESTS=ON
      - name: Build
        run: cmake --build build --parallel 2 --config ${{ matrix.build_type }}
      - name: Find binary proto_tests.exe
        if: matrix.os == 'windows-latest'
        run: Get-ChildItem -Path . -Recurse -Filter "proto_tests.exe" | Select-Object -ExpandProperty FullName
      - name: Test
        if: matrix.os != 'windows-latest'
        run: ./build/proto_tests
      - name: Test_windows
        if: matrix.os == 'windows-latest'
        run: |
          if (Test-Path "${{ github.workspace }}\build\${{ matrix.build_type }}\proto_tests.exe") {
            & "${{ github.workspace }}\build\${{ matrix.build_type }}\proto_tests.exe"
          } else {
            Write-Error "proto_tests.exe not found!"
          }
