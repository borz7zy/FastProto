name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  windows-build:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        arch: [x86, x64]

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (NASM)
        run: choco install nasm --yes --params "/InstallDir:C:\nasm"

      - name: Install Ninja
        run: choco install ninja --yes

      - name: Configure & Build
        shell: cmd
        run: |
          if "${{ matrix.arch }}"=="x86" (
            call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86
          ) else if "${{ matrix.arch }}"=="x64" (
            call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
          )

          where cl

          if "${{ matrix.build_type }}"=="Debug" (
            cmake -S . -B build -G Ninja ^
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ^
              -DBUILD_TESTING=ON ^
              -DBENCHMARK_ENABLE_TESTING=OFF ^
              -DBORINGSSL_SKIP_TESTS=ON
          ) else if "${{ matrix.build_type }}"=="Release" (
            cmake -S . -B build ^
              -G Ninja ^
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ^
              -DBUILD_TESTING=ON ^
              -DBENCHMARK_ENABLE_TESTING=OFF ^
              -DBORINGSSL_SKIP_TESTS=ON ^
              -DBORINGSSL_WARNINGS_AS_ERRORS=OFF
          )

          cmake --build build --parallel

      - name: Run tests
        shell: cmd
        run: |
          set BIN=%GITHUB_WORKSPACE%\build\proto_tests.exe
          if exist %BIN% (
            %BIN%
          ) else (
            echo proto_tests.exe not found!
            exit /b 1
          )

  build-unix:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        build_type: [Debug, Release]

    steps:
      - uses: actions/checkout@v4
  
      - name: Configure
        run: > 
          cmake -S . -B build 
          -G Ninja 
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} 
          -DBUILD_TESTING=ON 
          -DBENCHMARK_ENABLE_TESTING=OFF 
          -DBORINGSSL_SKIP_TESTS=ON

      - name: Build
        run: cmake --build build --parallel 2 --config ${{ matrix.build_type }}

      - name: Test
        if: matrix.os != 'windows-latest'
        run: ./build/proto_tests
